# Django settings for ngw project.

DEBUG = True
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    # ('Your Name', 'your_email@example.com'),
)

MANAGERS = ADMINS

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'ngw',                      # Or path to database file if using sqlite3.
        # The following settings are not used with sqlite3:
        'USER': 'XXX',
        'PASSWORD': 'XXX',
        'HOST': 'localhost',             # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
        'PORT': '',                      # Set to empty string for default.
    },

    # Enable this block if you want phpbb3 extension:
    # 'phpbb3': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'phpbb3',
    #     'USER': 'phpbb3',
    #     'PASSWORD': 'XXX',
    #     'HOST': 'localhost',
    #     'PORT': '',
    #     'OPTIONS': { 'autocommit': True },
    # },

    # Enable this block if you want jabber extension:
    # 'jabber': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'jabber',
    #     'USER': 'jabber',
    #     'PASSWORD': 'XXX',
    #     'HOST': 'localhost',
    #     'PORT': '',
    #     'OPTIONS': { 'autocommit': True },
    # },
}

# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/1.4/ref/settings/#allowed-hosts
ALLOWED_HOSTS = []

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
TIME_ZONE = 'Europe/Paris'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
USE_TZ = False

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = ''

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
MEDIA_URL = ''

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = ''

# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = '/'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    '/usr/lib/ngw/static/',
    ('admin', '/usr/share/pyshared/django/contrib/admin/static/admin'),
    ('javascript', '/usr/share/javascript'),
)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

# Make this unique, and don't share it with anybody. See README file.
SECRET_KEY = ''

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware', # set up request.user from session
    'django.contrib.messages.middleware.MessageMiddleware',
    # Uncomment the next line for simple clickjacking protection:
    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

ROOT_URLCONF = 'ngw.urls'

# Python dotted path to the WSGI application used by Django's runserver.
WSGI_APPLICATION = 'ngw.core.wsgi.application'

TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    '/usr/lib/ngw/templates',
)

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
#    'django.contrib.sites',
    'django.contrib.messages',
#    'django.contrib.staticfiles', # Don't enable here or '/' won't work, see urls.py
    'ngw.core',
#    'ngw.extensions.phpbb',
#    'ngw.extensions.mailman',
#    'ngw.extensions.xmpp',
    # Uncomment the next line to enable the admin:
    #'django.contrib.admin',
    # Uncomment the next line to enable admin documentation:
    #'django.contrib.admindocs',
)

TEMPLATE_CONTEXT_PROCESSORS = (
    'django.contrib.auth.context_processors.auth', # users, perms available in templates
    'django.core.context_processors.debug',
    'django.core.context_processors.i18n',
    'django.core.context_processors.media',
    'django.core.context_processors.request',
    'django.core.context_processors.static', # STATIC_URL available in templates
    'django.core.context_processors.tz',
    'django.contrib.messages.context_processors.messages',
    'ngw.core.context_processors.banner',
    'ngw.core.context_processors.contactcount',
)

AUTHENTICATION_BACKENDS = (
    'ngw.core.authbackend.NgwAuthBackend',
)

AUTH_USER_MODEL = 'core.Contact'

LOGIN_URL = '/login'
LOGIN_REDIRECT_URL = '/'

SESSION_COOKIE_AGE = 1800 # 30'
SESSION_SAVE_EVERY_REQUEST = True # Update session expiration time
SESSION_COOKIE_SECURE = True # We are not using http, only https
SESSION_EXPIRE_AT_BROWSER_CLOSE = True # We have short time sessions anyways

CSRF_COOKIE_SECURE = True # We are not using http, only https

# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error when DEBUG=False.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}

APPEND_SLASH = False
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

# Uncomment next line to enable password reset though libreoffice mailings:
#PASSWORD_LETTER = '/usr/lib/ngw/mailing/templates/resetpassword.odt'

# Uncomment next line to enable GPG keyring
#GPG_HOME = '/var/lib/ngw/'

# If you enable xmpp extension, you'll need to define these 2 values
#XMPP_DOMAIN = 'myxmppdomain.net'
#XMPP_GROUP = 284

#EMAIL_BACKEND = 'ngw.core.tormailbackend.TorEmailBackend'
#EMAIL_HOST = 'localhost'
EMAIL_PORT = 465
#EMAIL_HOST_USER = 'smtpuser'
#EMAIL_HOST_PASSWORD = 'password'
#DEFAULT_FROM_EMAIL = 'webmaster@localhost'

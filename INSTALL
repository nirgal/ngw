Installation
============
It is recommanded to use Debian 6 (Squeeze) or above

aptitude install python-django python-psycopg2 postgresql libapache2-mod-wsgi gettext python-uno python-cracklib tor python-socksipy make oomailing python-decoratedstr
or
aptitude install python3-django python3-psycopg2 postgresql libapache2-mod-wsgi-py3 gettext python3-uno python3-cracklib tor make python3-socksipy oomailing python3-decoratedstr

oomailing, python-decoratedstr and python3-socksipy packages can be downloaded at:
http://www.nirgal.com/debian/
or built from https://github.com/nirgal/decoratedstr

You need python-django version 1.7, available in Debian stable-backports at:
http://packages.qa.debian.org/python-django

Base directory must be /usr/lib/ngw (make a symlink)

You need to edit your settings.py:
- Put your database user/password there
- Put something in SECRET_KEY:
  from django.utils.crypto import get_random_string
  get_random_string(50, 'abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)')

You need to set up a cron tab:
*/5 * * * * /usr/lib/ngw/manage msgsync -v 2
0 * * * * /usr/lib/ngw/manage clearsessions

You also need to compile translation files. It is suggested you create a .git/hooks/post-merge file 755 file:
---8<---------------------------
#!/bin/bash
echo "Running $0" >&2
make
---8<---------------------------

Session security extra plugin:
------------------------------
Download code at https://github.com/yourlabs/django-session-security/releases
ln -s /home/admin/django-session-security-2.2.0/session_security /usr/lib/python2.7/dist-packages/
cd django-session-security-2.2.0/session_security
django-admin compilemessages
cd -


Postgres setup
==============

Create a user ngw (or something else):
  postgres@localhost:~$ createuser ngw --no-superuser --createdb --no-createrole

Set a password for it:
  postgres@localhost:~$ psql -c "\password ngw"

Create a database ngw with owner ngw:
  postgres@localhost:~$ createdb ngw -E unicode -O ngw

Create the structure, populate the initial data, and create the extra views and functions:
  $ psql -h localhost -U ngw ngw -f sql/structure.sql
  $ psql -h localhost -U ngw ngw -f sql/initialdata.sql
  $ psql -h localhost -U ngw ngw -f sql/functions.sql
  $ ./manage syncdb

Apache
======
Enable ssl in apache:
a2enmod ssl

Generate self-signed certificate:
openssl req -nodes -x509 -days 3650 -new -newkey rsa:2048 -subj /CN=ngw.example.net -keyout ngw.key -out ngw.crt

Listen on port 443
Add a new line "Listen 443" to /etc/apache2/ports.conf" if it's now there allready

Enable virtual hosts on https:
Add a new line "NameVirtualHost *:443" before "Listen 443"

User or group www-data should have write access to /usr/lib/ngw/media/g. If you want to run the debug runserver command from time to time, I suggest you chown :www-data that folder, with g+ws mode.

Admin account setup:
====================

In order to create an admin account, use:
./manage createsuperuser

oomailing permissions:
======================
chown www-data: /usr/lib/ngw/mailing/generated/

Optionnal extensions
====================

* phpbb3 synchronisation

You can use ngw groups to manage phpbb3 permissions, so that some contacts will
automatically have access to some forums.
See extentions/phpbb3/README

* ejabberd synchronisation

You can have one group automatically grant access to a local ejabberd.
See extentions/xmpp/README

* gpg support

mkdir /var/lib/ngw
chown www-data /var/lib/ngw

Right now, keys needs to be imported by hand: gpg --homedir /var/lib/ngw/ --import akey.key

Add "Listen 11371" at the end of the /etc/apache2/ports.conf
to have an hkp:// compatible server (Download only)

Uncomment gpg keyring directory in settings.py (GPG_HOME)
